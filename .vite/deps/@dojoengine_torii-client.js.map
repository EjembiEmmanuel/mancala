{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/@dojoengine+torii-wasm@0.6.125/node_modules/@dojoengine/torii-wasm/pkg/torii_client_wasm.js", "../../node_modules/.pnpm/@dojoengine+torii-wasm@0.6.125/node_modules/@dojoengine/torii-wasm/pkg/torii_client_wasm_bg.js"],
  "sourcesContent": ["import * as wasm from \"./torii_client_wasm_bg.wasm\";\nimport { __wbg_set_wasm } from \"./torii_client_wasm_bg.js\";\n__wbg_set_wasm(wasm);\nexport * from \"./torii_client_wasm_bg.js\";\n", "let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nconst CLOSURE_DTORS = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(state => {\n    wasm.__wbindgen_export_2.get(state.dtor)(state.a, state.b)\n});\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n                CLOSURE_DTORS.unregister(state);\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n    CLOSURE_DTORS.register(real, state, state);\n    return real;\n}\nfunction __wbg_adapter_40(arg0, arg1, arg2) {\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h39821cde123e2294(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_47(arg0, arg1) {\n    wasm.wasm_bindgen__convert__closures__invoke0_mut__h3cc6f5d62e46c44b(arg0, arg1);\n}\n\nfunction __wbg_adapter_50(arg0, arg1, arg2) {\n    wasm.wasm_bindgen__convert__closures__invoke1_mut__h5e02031b0db8d887(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_53(arg0, arg1, arg2) {\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h47a75ccebb4ea58b(arg0, arg1, addHeapObject(arg2));\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4, 4) >>> 0;\n    const mem = getUint32Memory0();\n    for (let i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n/**\n* @param {any} data\n* @param {string} address\n* @returns {string}\n*/\nexport function encoreTypedData(data, address) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.encoreTypedData(retptr, addHeapObject(data), ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        var ptr2 = r0;\n        var len2 = r1;\n        if (r3) {\n            ptr2 = 0; len2 = 0;\n            throw takeObject(r2);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n* Create the a client with the given configurations.\n* @param {(EntityModel)[]} initialModelsToSync\n* @param {ClientConfig} config\n* @returns {Promise<Client>}\n*/\nexport function createClient(initialModelsToSync, config) {\n    const ptr0 = passArrayJsValueToWasm0(initialModelsToSync, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.createClient(ptr0, len0, addHeapObject(config));\n    return takeObject(ret);\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\nfunction __wbg_adapter_278(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__h941f12d786c7ae6b(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\nconst ClientFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_client_free(ptr >>> 0));\n/**\n*/\nexport class Client {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Client.prototype);\n        obj.__wbg_ptr = ptr;\n        ClientFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        ClientFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_client_free(ptr);\n    }\n    /**\n    * @param {number} limit\n    * @param {number} offset\n    * @returns {Promise<any>}\n    */\n    getEntities(limit, offset) {\n        const ret = wasm.client_getEntities(this.__wbg_ptr, limit, offset);\n        return takeObject(ret);\n    }\n    /**\n    * @param {string} model\n    * @param {any[]} keys\n    * @param {number} limit\n    * @param {number} offset\n    * @returns {Promise<any>}\n    */\n    getEntitiesByKeys(model, keys, limit, offset) {\n        const ptr0 = passStringToWasm0(model, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArrayJsValueToWasm0(keys, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.client_getEntitiesByKeys(this.__wbg_ptr, ptr0, len0, ptr1, len1, limit, offset);\n        return takeObject(ret);\n    }\n    /**\n    * Retrieves the model value of an entity. Will fetch from remote if the requested entity is not one of the entities that are being synced.\n    * @param {string} model\n    * @param {any[]} keys\n    * @returns {Promise<any>}\n    */\n    getModelValue(model, keys) {\n        const ptr0 = passStringToWasm0(model, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArrayJsValueToWasm0(keys, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.client_getModelValue(this.__wbg_ptr, ptr0, len0, ptr1, len1);\n        return takeObject(ret);\n    }\n    /**\n    * Register new entities to be synced.\n    * @param {(EntityModel)[]} models\n    * @returns {Promise<void>}\n    */\n    addModelsToSync(models) {\n        const ptr0 = passArrayJsValueToWasm0(models, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.client_addModelsToSync(this.__wbg_ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Remove the entities from being synced.\n    * @param {(EntityModel)[]} models\n    * @returns {Promise<void>}\n    */\n    removeModelsToSync(models) {\n        const ptr0 = passArrayJsValueToWasm0(models, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.client_removeModelsToSync(this.__wbg_ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * Register a callback to be called every time the specified synced entity's value changes.\n    * @param {EntityModel} model\n    * @param {Function} callback\n    */\n    onSyncModelChange(model, callback) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.client_onSyncModelChange(retptr, this.__wbg_ptr, addHeapObject(model), addHeapObject(callback));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {(string)[] | undefined} ids\n    * @param {Function} callback\n    * @returns {Promise<void>}\n    */\n    onEntityUpdated(ids, callback) {\n        var ptr0 = isLikeNone(ids) ? 0 : passArrayJsValueToWasm0(ids, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ret = wasm.client_onEntityUpdated(this.__wbg_ptr, ptr0, len0, addHeapObject(callback));\n        return takeObject(ret);\n    }\n    /**\n    * @param {any} message\n    * @param {Signature} signature\n    * @returns {Promise<Uint8Array>}\n    */\n    publishMessage(message, signature) {\n        const ret = wasm.client_publishMessage(this.__wbg_ptr, addHeapObject(message), addHeapObject(signature));\n        return takeObject(ret);\n    }\n}\n\nconst IntoUnderlyingByteSourceFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_intounderlyingbytesource_free(ptr >>> 0));\n/**\n*/\nexport class IntoUnderlyingByteSource {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        IntoUnderlyingByteSourceFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_intounderlyingbytesource_free(ptr);\n    }\n    /**\n    * @returns {string}\n    */\n    get type() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.intounderlyingbytesource_type(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    get autoAllocateChunkSize() {\n        const ret = wasm.intounderlyingbytesource_autoAllocateChunkSize(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {any} controller\n    */\n    start(controller) {\n        wasm.intounderlyingbytesource_start(this.__wbg_ptr, addHeapObject(controller));\n    }\n    /**\n    * @param {any} controller\n    * @returns {Promise<any>}\n    */\n    pull(controller) {\n        const ret = wasm.intounderlyingbytesource_pull(this.__wbg_ptr, addHeapObject(controller));\n        return takeObject(ret);\n    }\n    /**\n    */\n    cancel() {\n        const ptr = this.__destroy_into_raw();\n        wasm.intounderlyingbytesource_cancel(ptr);\n    }\n}\n\nconst IntoUnderlyingSinkFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_intounderlyingsink_free(ptr >>> 0));\n/**\n*/\nexport class IntoUnderlyingSink {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        IntoUnderlyingSinkFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_intounderlyingsink_free(ptr);\n    }\n    /**\n    * @param {any} chunk\n    * @returns {Promise<any>}\n    */\n    write(chunk) {\n        const ret = wasm.intounderlyingsink_write(this.__wbg_ptr, addHeapObject(chunk));\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Promise<any>}\n    */\n    close() {\n        const ptr = this.__destroy_into_raw();\n        const ret = wasm.intounderlyingsink_close(ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {any} reason\n    * @returns {Promise<any>}\n    */\n    abort(reason) {\n        const ptr = this.__destroy_into_raw();\n        const ret = wasm.intounderlyingsink_abort(ptr, addHeapObject(reason));\n        return takeObject(ret);\n    }\n}\n\nconst IntoUnderlyingSourceFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_intounderlyingsource_free(ptr >>> 0));\n/**\n*/\nexport class IntoUnderlyingSource {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        IntoUnderlyingSourceFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_intounderlyingsource_free(ptr);\n    }\n    /**\n    * @param {any} controller\n    * @returns {Promise<any>}\n    */\n    pull(controller) {\n        const ret = wasm.intounderlyingsource_pull(this.__wbg_ptr, addHeapObject(controller));\n        return takeObject(ret);\n    }\n    /**\n    */\n    cancel() {\n        const ptr = this.__destroy_into_raw();\n        wasm.intounderlyingsource_cancel(ptr);\n    }\n}\n\nconst PipeOptionsFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_pipeoptions_free(ptr >>> 0));\n/**\n* Raw options for [`pipeTo()`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/pipeTo).\n*/\nexport class PipeOptions {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        PipeOptionsFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pipeoptions_free(ptr);\n    }\n    /**\n    * @returns {boolean}\n    */\n    get preventClose() {\n        const ret = wasm.pipeoptions_preventClose(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {boolean}\n    */\n    get preventCancel() {\n        const ret = wasm.pipeoptions_preventCancel(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {boolean}\n    */\n    get preventAbort() {\n        const ret = wasm.pipeoptions_preventAbort(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {AbortSignal | undefined}\n    */\n    get signal() {\n        const ret = wasm.pipeoptions_signal(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n\nconst QueuingStrategyFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_queuingstrategy_free(ptr >>> 0));\n/**\n*/\nexport class QueuingStrategy {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        QueuingStrategyFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_queuingstrategy_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get highWaterMark() {\n        const ret = wasm.queuingstrategy_highWaterMark(this.__wbg_ptr);\n        return ret;\n    }\n}\n\nconst ReadableStreamGetReaderOptionsFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_readablestreamgetreaderoptions_free(ptr >>> 0));\n/**\n* Raw options for [`getReader()`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/getReader).\n*/\nexport class ReadableStreamGetReaderOptions {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        ReadableStreamGetReaderOptionsFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_readablestreamgetreaderoptions_free(ptr);\n    }\n    /**\n    * @returns {any}\n    */\n    get mode() {\n        const ret = wasm.readablestreamgetreaderoptions_mode(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_object_clone_ref(arg0) {\n    const ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_client_new(arg0) {\n    const ret = Client.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_log_02a869c958e7ad59(arg0, arg1) {\n    console.log(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_cb_drop(arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n        obj.a = 0;\n        return true;\n    }\n    const ret = false;\n    return ret;\n};\n\nexport function __wbindgen_string_get(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbindgen_is_object(arg0) {\n    const val = getObject(arg0);\n    const ret = typeof(val) === 'object' && val !== null;\n    return ret;\n};\n\nexport function __wbindgen_is_undefined(arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport function __wbindgen_in(arg0, arg1) {\n    const ret = getObject(arg0) in getObject(arg1);\n    return ret;\n};\n\nexport function __wbindgen_error_new(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_abda76e883ba8a5f() {\n    const ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_stack_658279fe44541cf6(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbg_error_f851667af71bcfc6(arg0, arg1) {\n    let deferred0_0;\n    let deferred0_1;\n    try {\n        deferred0_0 = arg0;\n        deferred0_1 = arg1;\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n    }\n};\n\nexport function __wbindgen_jsval_loose_eq(arg0, arg1) {\n    const ret = getObject(arg0) == getObject(arg1);\n    return ret;\n};\n\nexport function __wbindgen_boolean_get(arg0) {\n    const v = getObject(arg0);\n    const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n    return ret;\n};\n\nexport function __wbindgen_number_get(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof(obj) === 'number' ? obj : undefined;\n    getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n    getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n};\n\nexport function __wbg_String_b9412f8799faab3e(arg0, arg1) {\n    const ret = String(getObject(arg1));\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbindgen_number_new(arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_getwithrefkey_edc2c8960f0f1191(arg0, arg1) {\n    const ret = getObject(arg0)[getObject(arg1)];\n    return addHeapObject(ret);\n};\n\nexport function __wbg_clearTimeout_76877dbc010e786d(arg0) {\n    const ret = clearTimeout(takeObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_setTimeout_75cb9b6991a4031d() { return handleError(function (arg0, arg1) {\n    const ret = setTimeout(getObject(arg0), arg1);\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_fetch_24472c79bb4342d1(arg0, arg1) {\n    const ret = fetch(getObject(arg0), getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_releaseLock_9ae075576f54bf0b() { return handleError(function (arg0) {\n    getObject(arg0).releaseLock();\n}, arguments) };\n\nexport function __wbg_getReader_8ecba87d8003e950() { return handleError(function (arg0) {\n    const ret = getObject(arg0).getReader();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_cancel_7f202496da02cd45(arg0) {\n    const ret = getObject(arg0).cancel();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_respond_8fadc5f5c9d95422(arg0, arg1) {\n    getObject(arg0).respond(arg1 >>> 0);\n};\n\nexport function __wbg_read_88c96573fc8b3b01(arg0) {\n    const ret = getObject(arg0).read();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_done_76252d32deca186b(arg0) {\n    const ret = getObject(arg0).done;\n    return ret;\n};\n\nexport function __wbg_value_ff3741eb46856618(arg0) {\n    const ret = getObject(arg0).value;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_close_e9110ca16e2567db(arg0) {\n    getObject(arg0).close();\n};\n\nexport function __wbg_enqueue_d71a1a518e21f5c3(arg0, arg1) {\n    getObject(arg0).enqueue(getObject(arg1));\n};\n\nexport function __wbg_byobRequest_08c18cee35def1f4(arg0) {\n    const ret = getObject(arg0).byobRequest;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport function __wbg_close_da7e6fb9d9851e5a(arg0) {\n    getObject(arg0).close();\n};\n\nexport function __wbg_view_231340b0dd8a2484(arg0) {\n    const ret = getObject(arg0).view;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport function __wbg_buffer_4e79326814bdd393(arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_byteOffset_b69b0a07afccce19(arg0) {\n    const ret = getObject(arg0).byteOffset;\n    return ret;\n};\n\nexport function __wbg_byteLength_5299848ed3264181(arg0) {\n    const ret = getObject(arg0).byteLength;\n    return ret;\n};\n\nexport function __wbg_fetch_bc7c8e27076a5c84(arg0) {\n    const ret = fetch(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_queueMicrotask_481971b0d87f3dd4(arg0) {\n    queueMicrotask(getObject(arg0));\n};\n\nexport function __wbg_queueMicrotask_3cbae2ec6b6cd3d6(arg0) {\n    const ret = getObject(arg0).queueMicrotask;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_is_function(arg0) {\n    const ret = typeof(getObject(arg0)) === 'function';\n    return ret;\n};\n\nexport function __wbg_instanceof_Window_f401953a2cf86220(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof Window;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_document_5100775d18896c16(arg0) {\n    const ret = getObject(arg0).document;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport function __wbg_navigator_6c8fa55c5cc8796e(arg0) {\n    const ret = getObject(arg0).navigator;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_location_1325817a58c77ceb(arg0) {\n    const ret = getObject(arg0).location;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport function __wbg_fetch_921fad6ef9e883dd(arg0, arg1) {\n    const ret = getObject(arg0).fetch(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_fetch_bc400efeda8ac0c8(arg0, arg1, arg2) {\n    const ret = getObject(arg0).fetch(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_instanceof_Response_849eb93e75734b6e(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof Response;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_url_5f6dc4009ac5f99d(arg0, arg1) {\n    const ret = getObject(arg1).url;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbg_status_61a01141acd3cf74(arg0) {\n    const ret = getObject(arg0).status;\n    return ret;\n};\n\nexport function __wbg_headers_9620bfada380764a(arg0) {\n    const ret = getObject(arg0).headers;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_body_9545a94f397829db(arg0) {\n    const ret = getObject(arg0).body;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport function __wbg_text_450a059667fd91fd() { return handleError(function (arg0) {\n    const ret = getObject(arg0).text();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_sdp_ec4467d15d4acf46(arg0, arg1) {\n    const ret = getObject(arg1).sdp;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbg_userAgent_e94c7cbcdac01fea() { return handleError(function (arg0, arg1) {\n    const ret = getObject(arg1).userAgent;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n}, arguments) };\n\nexport function __wbg_new_ab6fd82b10560829() { return handleError(function () {\n    const ret = new Headers();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_append_7bfcb4937d1d5e29() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).append(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n}, arguments) };\n\nexport function __wbg_data_3ce7c145ca4fbcdc(arg0) {\n    const ret = getObject(arg0).data;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_now_4e659b3d15f470d9(arg0) {\n    const ret = getObject(arg0).now();\n    return ret;\n};\n\nexport function __wbg_hostname_3d9f22c60dc5bec6() { return handleError(function (arg0, arg1) {\n    const ret = getObject(arg1).hostname;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n}, arguments) };\n\nexport function __wbg_signal_a61f78a3478fd9bc(arg0) {\n    const ret = getObject(arg0).signal;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_0d76b0581eca6298() { return handleError(function () {\n    const ret = new AbortController();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_abort_2aa7521d5690750e(arg0) {\n    getObject(arg0).abort();\n};\n\nexport function __wbg_localDescription_fdbb277fe69d4acc(arg0) {\n    const ret = getObject(arg0).localDescription;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport function __wbg_setondatachannel_613916740487b8be(arg0, arg1) {\n    getObject(arg0).ondatachannel = getObject(arg1);\n};\n\nexport function __wbg_newwithconfiguration_b15024f88c684163() { return handleError(function (arg0) {\n    const ret = new RTCPeerConnection(getObject(arg0));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_close_afa09a1e1e0a4628(arg0) {\n    getObject(arg0).close();\n};\n\nexport function __wbg_createDataChannel_df256842e04b7684(arg0, arg1, arg2) {\n    const ret = getObject(arg0).createDataChannel(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_createDataChannel_2cb2147b68f44846(arg0, arg1, arg2, arg3) {\n    const ret = getObject(arg0).createDataChannel(getStringFromWasm0(arg1, arg2), getObject(arg3));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_createOffer_663eb8b8f3c6f8b9(arg0) {\n    const ret = getObject(arg0).createOffer();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_generateCertificate_31ec6e1adc163ef8() { return handleError(function (arg0) {\n    const ret = RTCPeerConnection.generateCertificate(getObject(arg0));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_setLocalDescription_41e208bc9dc2a799(arg0, arg1) {\n    const ret = getObject(arg0).setLocalDescription(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_setRemoteDescription_38ba80261ed6604d(arg0, arg1) {\n    const ret = getObject(arg0).setRemoteDescription(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_newwithstrandinit_3fd6fba4083ff2d0() { return handleError(function (arg0, arg1, arg2) {\n    const ret = new Request(getStringFromWasm0(arg0, arg1), getObject(arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_readyState_4cec7804e10e9e8c(arg0) {\n    const ret = getObject(arg0).readyState;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_bufferedAmount_d96d201d2e665ac8(arg0) {\n    const ret = getObject(arg0).bufferedAmount;\n    return ret;\n};\n\nexport function __wbg_setbufferedAmountLowThreshold_c720cc0a1e84254f(arg0, arg1) {\n    getObject(arg0).bufferedAmountLowThreshold = arg1 >>> 0;\n};\n\nexport function __wbg_setonopen_a8d36a7a7e2a0661(arg0, arg1) {\n    getObject(arg0).onopen = getObject(arg1);\n};\n\nexport function __wbg_setonclose_756793f4dc0ff009(arg0, arg1) {\n    getObject(arg0).onclose = getObject(arg1);\n};\n\nexport function __wbg_setonmessage_156079b6ed74472e(arg0, arg1) {\n    getObject(arg0).onmessage = getObject(arg1);\n};\n\nexport function __wbg_setonbufferedamountlow_b8982bab0245abc8(arg0, arg1) {\n    getObject(arg0).onbufferedamountlow = getObject(arg1);\n};\n\nexport function __wbg_setbinaryType_0b2b32db03dea0c0(arg0, arg1) {\n    getObject(arg0).binaryType = takeObject(arg1);\n};\n\nexport function __wbg_send_a10ff3ed6e9aee30() { return handleError(function (arg0, arg1, arg2) {\n    getObject(arg0).send(getArrayU8FromWasm0(arg1, arg2));\n}, arguments) };\n\nexport function __wbg_channel_034b1aa3ed21a9d2(arg0) {\n    const ret = getObject(arg0).channel;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_crypto_d05b68a3572bb8ca(arg0) {\n    const ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_process_b02b3570280d0366(arg0) {\n    const ret = getObject(arg0).process;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_versions_c1cb42213cedf0f5(arg0) {\n    const ret = getObject(arg0).versions;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_node_43b1089f407e4ec2(arg0) {\n    const ret = getObject(arg0).node;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_is_string(arg0) {\n    const ret = typeof(getObject(arg0)) === 'string';\n    return ret;\n};\n\nexport function __wbg_msCrypto_10fc94afee92bd76(arg0) {\n    const ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_require_9a7e0f667ead4995() { return handleError(function () {\n    const ret = module.require;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_randomFillSync_b70ccbdf4926a99d() { return handleError(function (arg0, arg1) {\n    getObject(arg0).randomFillSync(takeObject(arg1));\n}, arguments) };\n\nexport function __wbg_getRandomValues_7e42b4fb8779dc6d() { return handleError(function (arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n}, arguments) };\n\nexport function __wbg_get_bd8e338fbd5f5cc8(arg0, arg1) {\n    const ret = getObject(arg0)[arg1 >>> 0];\n    return addHeapObject(ret);\n};\n\nexport function __wbg_length_cd7af8117672b8b8(arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n};\n\nexport function __wbg_new_16b304a2cfa7ff4a() {\n    const ret = new Array();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_newnoargs_e258087cd0daa0ea(arg0, arg1) {\n    const ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_next_40fc327bfc8770e6(arg0) {\n    const ret = getObject(arg0).next;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_next_196c84450b364254() { return handleError(function (arg0) {\n    const ret = getObject(arg0).next();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_done_298b57d23c0fc80c(arg0) {\n    const ret = getObject(arg0).done;\n    return ret;\n};\n\nexport function __wbg_value_d93c65011f51a456(arg0) {\n    const ret = getObject(arg0).value;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_iterator_2cee6dadfd956dfa() {\n    const ret = Symbol.iterator;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_get_e3c254076557e348() { return handleError(function (arg0, arg1) {\n    const ret = Reflect.get(getObject(arg0), getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_call_27c0f87801dedf93() { return handleError(function (arg0, arg1) {\n    const ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_new_72fb9a18b5ae2624() {\n    const ret = new Object();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_self_ce0dbfc45cf2f5be() { return handleError(function () {\n    const ret = self.self;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_window_c6fb939a7f436783() { return handleError(function () {\n    const ret = window.window;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_globalThis_d1e6af4856ba331b() { return handleError(function () {\n    const ret = globalThis.globalThis;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_global_207b558942527489() { return handleError(function () {\n    const ret = global.global;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_isArray_2ab64d95e09ea0ae(arg0) {\n    const ret = Array.isArray(getObject(arg0));\n    return ret;\n};\n\nexport function __wbg_push_a5b05aedc7234f9f(arg0, arg1) {\n    const ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n};\n\nexport function __wbg_instanceof_ArrayBuffer_836825be07d4c9d2(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof ArrayBuffer;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_instanceof_Error_e20bb56fd5591a93(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof Error;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_new_28c511d9baebfa89(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_toString_ffe4c9ea3b3532e9(arg0) {\n    const ret = getObject(arg0).toString();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_call_b3ca7c6051f9bec1() { return handleError(function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_now_3014639a94423537() {\n    const ret = Date.now();\n    return ret;\n};\n\nexport function __wbg_toString_c816a20ab859d0c1(arg0) {\n    const ret = getObject(arg0).toString();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_81740750da40724f(arg0, arg1) {\n    try {\n        var state0 = {a: arg0, b: arg1};\n        var cb0 = (arg0, arg1) => {\n            const a = state0.a;\n            state0.a = 0;\n            try {\n                return __wbg_adapter_278(a, state0.b, arg0, arg1);\n            } finally {\n                state0.a = a;\n            }\n        };\n        const ret = new Promise(cb0);\n        return addHeapObject(ret);\n    } finally {\n        state0.a = state0.b = 0;\n    }\n};\n\nexport function __wbg_resolve_b0083a7967828ec8(arg0) {\n    const ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_catch_0260e338d10f79ae(arg0, arg1) {\n    const ret = getObject(arg0).catch(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_then_0c86a60e8fcfe9f6(arg0, arg1) {\n    const ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_then_a73caa9a87991566(arg0, arg1, arg2) {\n    const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_buffer_12d079cc21e14bdb(arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb(arg0, arg1, arg2) {\n    const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_63b92bc8671ed464(arg0) {\n    const ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_set_a47bac70306a19a7(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport function __wbg_length_c20a40f15020d68a(arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n};\n\nexport function __wbg_instanceof_Uint8Array_2b3bbecd033d19f6(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof Uint8Array;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_newwithlength_e9b4878cebadb3d3(arg0) {\n    const ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_subarray_a1f73cd4b5b42fe1(arg0, arg1, arg2) {\n    const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_parse_66d1801634e099ac() { return handleError(function (arg0, arg1) {\n    const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_stringify_8887fe74e1c50d81() { return handleError(function (arg0) {\n    const ret = JSON.stringify(getObject(arg0));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_has_0af94d20077affa2() { return handleError(function (arg0, arg1) {\n    const ret = Reflect.has(getObject(arg0), getObject(arg1));\n    return ret;\n}, arguments) };\n\nexport function __wbg_set_1f9b04f170055d33() { return handleError(function (arg0, arg1, arg2) {\n    const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n    return ret;\n}, arguments) };\n\nexport function __wbindgen_debug_string(arg0, arg1) {\n    const ret = debugString(getObject(arg1));\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_rethrow(arg0) {\n    throw takeObject(arg0);\n};\n\nexport function __wbindgen_memory() {\n    const ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_closure_wrapper2226(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 779, __wbg_adapter_40);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_closure_wrapper2227(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 779, __wbg_adapter_40);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_closure_wrapper2228(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 779, __wbg_adapter_40);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_closure_wrapper3897(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 1560, __wbg_adapter_47);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_closure_wrapper4794(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 1855, __wbg_adapter_50);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_closure_wrapper5277(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 2101, __wbg_adapter_53);\n    return addHeapObject(ret);\n};\n\n"],
  "mappings": "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",
  "names": ["wasm", "ptr", "wasm"]
}
